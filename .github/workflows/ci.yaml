name: CI/CD

on:
  - push
  - pull_request

env:
  # Enable symbolic links on Windows
  MSYS: winsymlinks:nativestrict
  CYGWIN: winsymlinks:nativestrict

jobs:
  build_and_test:
    name: Build and Test

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        rust:
          - '1.43.0'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    steps:
      - name: Enable symbolic link for Git on Windows
        if: runner.os == 'Windows'
        run: |
          git config --global core.symlinks true
          git config --system core.symlinks true

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          default: true

      - name: Cache Rust Cargo Registry
        uses: actions/cache@v1.1.2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: ~/.cargo/registry
          key: clippy-cargo-registry-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-cargo-registry-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            clippy-cargo-registry-${{ matrix.rust }}-${{ runner.os }}-
            clippy-cargo-registry-${{ matrix.rust }}-

      - name: Cache Rust Cargo Index
        uses: actions/cache@v1.1.2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: ~/.cargo/git
          key: clippy-cargo-index-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-cargo-index-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            clippy-cargo-index-${{ matrix.rust }}-${{ runner.os }}-
            clippy-cargo-index-${{ matrix.rust }}-

      - name: Cache Rust Build
        uses: actions/cache@v1.1.2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: target
          key: clippy-build-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-build-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            clippy-build-${{ matrix.rust }}-${{ runner.os }}-
            clippy-build-${{ matrix.rust }}-

      - name: Build
        run: cargo build --locked

      - name: Test on Linux
        if: runner.os == 'Linux'
        run: cargo test

      - name: Install GNU utilities for macOS
        if: runner.os == 'macOS'
        run: brew install coreutils

      - name: Test on macOS
        if: runner.os == 'macOS'
        run: |
          export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
          cargo test

      - name: Setting up MSYS2
        if: runner.os == 'Windows'
        uses: numworks/setup-msys2@v1
        with:
          path-type: inherit
          update: true

      - name: Test on Windows
        if: runner.os == 'Windows'
        run: msys2do cargo test

  clippy_check:
    name: Clippy

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        rust:
          - '1.43.0'
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: clippy
          override: true
          default: true

      - name: Cache Rust Cargo
        uses: actions/cache@v1.1.2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: ~/.cargo
          key: clippy-cargo-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-cargo-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            clippy-cargo-${{ matrix.rust }}-${{ runner.os }}-
            clippy-cargo-${{ matrix.rust }}-

      - name: Cache Rust Build
        uses: actions/cache@v1.1.2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: target
          key: clippy-build-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-build-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            clippy-build-${{ matrix.rust }}-${{ runner.os }}-
            clippy-build-${{ matrix.rust }}-

      - name: Use clippy to lint code
        uses: actions-rs/clippy-check@v1
        timeout-minutes: 1
        with:
          name: Clippy Report (${{ matrix.rust }}, ${{ matrix.os }})
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -D warnings
