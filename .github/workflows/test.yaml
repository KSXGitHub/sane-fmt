name: Test

on:
  - push
  - pull_request

env:
  # Enable symbolic links on Windows
  MSYS: winsymlinks:nativestrict
  CYGWIN: winsymlinks:nativestrict

jobs:
  build_and_test:
    name: Build and Test

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        rust:
          - '1.43.0'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    steps:
      - name: Enable symbolic link for Git on Windows
        if: "runner.os == 'Windows'"
        run: |
          git config --global core.symlinks true
          git config --system core.symlinks true

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          default: true

      - name: Cache rust
        uses: actions/cache@v1
        with:
          path: |-
            ~/.cargo/registry
            target/*/.*
            target/*/build
            target/*/deps
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-${{ matrix.rust }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            rust-${{ matrix.rust }}-${{ runner.os }}-

      - name: Build
        run: |
          cargo update
          cargo build

      - name: Test
        if: "runner.os !== 'Windows'"
        run: cargo test

      - name: Setting up MSYS2
        if: "runner.os == 'Windows'"
        uses: numworks/setup-msys2@v1
        with:
          path-type: inherit
          update: true

      - name: Test
        if: "runner.os == 'Windows'"
        run: msys2do cargo test
