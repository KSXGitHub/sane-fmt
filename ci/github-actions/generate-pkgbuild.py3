#! /usr/bin/env python3
from os import environ, makedirs
import re

target = environ.get('TARGET')
if not target:
  print('::error ::TARGET is required but missing')
  exit(1)

release_tag = environ.get('RELEASE_TAG')
if not release_tag:
  print('::error ::RELEASE_TAG is required but missing')
  exit(1)

sha1sum_lines = open('checksums/sha1sum.txt').readlines()
word_splitter = re.compile(r'\s+')
def get_checksum(name: str) -> str:
  for line in sha1sum_lines:
    line = line.strip()
    if line.endswith(name):
      checksum, _ = word_splitter.split(line)
      return checksum
  raise KeyError(f'Key {name} does not exist')

checksum = get_checksum(target)

maintainer = '# Maintainer: Hoàng Văn Khải <hvksmr1996@gmail.com>\n'
readme_url = 'https://raw.githubusercontent.com/sane-fmt/sane-fmt/master/README.md'
license_url = 'https://raw.githubusercontent.com/sane-fmt/sane-fmt/master/LICENSE.md'

opening = maintainer + '\n# This file is automatically generated. Do not edit.\n'

print('Generating PKGBUILD for sane-fmt...')
makedirs('./pkgbuild/sane-fmt', exist_ok=True)
with open('./pkgbuild/sane-fmt/PKGBUILD', 'w') as pkgbuild:
  content = opening + '\n'
  content += 'pkgname=sane-fmt\n'
  content += f'pkgver={release_tag}\n'
  source_url = f'https://github.com/sane-fmt/sane-fmt/archive/{release_tag}.tar.gz'
  content += f'source=(sane-fmt-{release_tag}.tar.gz::{source_url} {readme_url} {license_url})\n'
  content += 'sha1sums=(SKIP SKIP SKIP)\n'
  content += open('./template/sane-fmt/PKGBUILD').read() + '\n'
  pkgbuild.write(content)

print('Generating PKGBUILD for sane-fmt-bin...')
makedirs('./pkgbuild/sane-fmt-bin', exist_ok=True)
with open('./pkgbuild/sane-fmt-bin/PKGBUILD', 'w') as pkgbuild:
  content = opening + '\n'
  content += 'pkgname=sane-fmt-bin\n'
  content += f'pkgver={release_tag}\n'
  source_url_prefix=f'https://github.com/sane-fmt/sane-fmt/releases/download/{release_tag}'
  source_url = f'{source_url_prefix}/sane-fmt-{target}'
  supported_completions = ['bash', 'fish', 'zsh']
  completions = ' '.join(
    f'completion.{release_tag}.{ext}::{source_url_prefix}/completion.{ext}'
    for ext in supported_completions
  )
  completion_checksums = ' '.join(get_checksum(f'completion.{ext}') for ext in supported_completions)
  content += f'source=(sane-fmt-{checksum}::{source_url} {completions} {readme_url} {license_url})\n'
  content += f'_checksum={checksum}\n'
  content += f'_completion_checksums=({completion_checksums})\n'
  content += open('./template/sane-fmt-bin/PKGBUILD').read() + '\n'
  pkgbuild.write(content)
